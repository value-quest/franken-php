name: Build FrankenPHP Latest Release

on:
  workflow_dispatch:  # Allows manual triggering
  
jobs:
  build-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release info
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/dunglas/frankenphp/releases/latest)
          LATEST_VERSION=$(echo $LATEST_RELEASE | jq -r .tag_name)
          echo "Latest FrankenPHP release: $LATEST_VERSION"
          echo "tag_name=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config

      - name: Clone FrankenPHP
        run: |
          echo "Building FrankenPHP release: ${{ steps.get_release.outputs.tag_name }}"
          git clone https://github.com/dunglas/frankenphp
          
      - name: Build FrankenPHP
        id: build
        continue-on-error: true
        run: |
          cd frankenphp
          # Set IGNORE_DEPRECATION_WARNINGS to suppress PHP deprecation notices
          export IGNORE_DEPRECATION_WARNINGS=1
          ./build-static.sh
          
          # Check if build artifacts exist
          if [ -d "dist" ] && [ "$(ls -A dist)" ]; then
            echo "build_success=true" >> $GITHUB_OUTPUT
          else
            echo "build_success=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Check build status
        if: steps.build.outputs.build_success != 'true'
        run: |
          echo "Build failed to produce artifacts. Checking logs for issues."
          exit 1
          
      - name: Upload build artifacts
        if: steps.build.outputs.build_success == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: frankenphp-${{ steps.get_release.outputs.tag_name }}
          path: frankenphp/dist/
          retention-days: 7
