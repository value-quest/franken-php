name: Build FrankenPHP binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  # Allow manual triggering
  schedule:
    - cron: '0 0 * * 0'  # Weekly builds on Sunday at midnight

jobs:
  build:
    strategy:
      matrix:
        php-version: ['8.3.20']  # Latest 8.3 stable and 8.4 stable
        include:
          - php-version: '8.3.20'
            php-short: 'php83'
    
    runs-on: ubuntu-latest
    env:
      FRANKENPHP_VERSION: '1.5.0'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl ca-certificates \
            pkg-config libssl-dev zlib1g-dev libxml2-dev libbrotli-dev \
            autoconf automake libtool libsqlite3-dev libcurl4-openssl-dev libonig-dev \
            libmariadb-dev libmariadb-dev-compat

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          # Disable cache since we don't have a go.sum file in the root
          cache: false

      - name: Get PHP ${{ matrix.php-version }}
        run: |
          curl -L https://www.php.net/distributions/php-${{ matrix.php-version }}.tar.gz -o php.tar.gz
          tar xf php.tar.gz

      - name: Configure and Build PHP
        run: |
          cd php-${{ matrix.php-version }}/
          ./configure \
            --enable-embed \
            --enable-zts \
            --disable-zend-signals \
            --enable-zend-max-execution-timers \
            --enable-mbstring \
            --with-openssl \
            --enable-xml \
            --enable-ctype \
            --with-curl \
            --enable-dom \
            --enable-fileinfo \
            --enable-filter \
            --enable-hash \
            --enable-pdo \
            --with-pdo-sqlite \
            --with-pdo-mysql \
            --with-mysqli \
            --enable-session \
            --enable-tokenizer
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Get FrankenPHP
        run: |
          curl -L https://github.com/dunglas/frankenphp/archive/refs/tags/v${FRANKENPHP_VERSION}.tar.gz | tar xz

      - name: Build FrankenPHP
        working-directory: frankenphp-${{ env.FRANKENPHP_VERSION }}/caddy/frankenphp
        run: |
          CGO_CFLAGS=$(php-config --includes) CGO_LDFLAGS="$(php-config --ldflags) $(php-config --libs)" go build -tags=nobadger,nomysql,nopgx,nowatcher

      - name: Package FrankenPHP with libraries
        run: |
          # Create directories
          mkdir -p dist/lib
      
          # Copy PHP shared library
          cp $(php-config --prefix)/lib/libphp.so dist/lib/
      
          # Copy all required shared libraries
          ldd frankenphp-${FRANKENPHP_VERSION}/caddy/frankenphp/frankenphp | grep "=> /" | awk '{print $3}' | grep -v "libc.so" | grep -v "ld-linux" | xargs -I '{}' cp -v '{}' dist/lib/ || true
      
          # Copy the FrankenPHP binary directly as frankenphp.bin
          cp frankenphp-${FRANKENPHP_VERSION}/caddy/frankenphp/frankenphp dist/frankenphp.bin
          chmod +x dist/frankenphp.bin
      
          # Create wrapper script directly
          cat > dist/frankenphp << 'EOF'
          #!/bin/bash
          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          LD_LIBRARY_PATH="$SCRIPT_DIR/lib:$LD_LIBRARY_PATH" "$SCRIPT_DIR/frankenphp.bin" "$@"
          EOF
          chmod +x dist/frankenphp
      
          # Create archive
          cd dist
          tar -czf ../frankenphp-linux-amd64-${{ matrix.php-short }}.tar.gz .
          cd ..

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: frankenphp-${{ matrix.php-short }}
          path: frankenphp-linux-amd64-${{ matrix.php-short }}.tar.gz
          retention-days: 7

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        with:
          tag_name: v${{ env.FRANKENPHP_VERSION }}-${{ matrix.php-short }}-${{ github.run_number }}
          name: FrankenPHP v${{ env.FRANKENPHP_VERSION }} with PHP ${{ matrix.php-version }}
          draft: false
          prerelease: false
          files: frankenphp-linux-amd64-${{ matrix.php-short }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
