name: Build FrankenPHP Latest Release
on:
  workflow_dispatch:  # Allows manual triggering
  
jobs:
  build-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release info
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/dunglas/frankenphp/releases/latest)
          LATEST_VERSION=$(echo $LATEST_RELEASE | jq -r .tag_name)
          echo "Latest FrankenPHP release: $LATEST_VERSION"
          echo "tag_name=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: Checkout FrankenPHP
        uses: actions/checkout@v4
        with:
          repository: dunglas/frankenphp
          ref: ${{ steps.get_release.outputs.tag_name }}
      
      - name: Create custom Dockerfile for static build
        run: |
          cat > Dockerfile.static << 'EOF'
FROM golang:1.22-bookworm

WORKDIR /go/src/app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    git \
    curl \
    composer \
    upx

# Copy FrankenPHP source code
COPY . .

# Set environment variables for GNU libc build
ENV SPC_LIBC=glibc

# Build the static binary
RUN ./build-static.sh

CMD ["bash"]
EOF
      
      - name: Build FrankenPHP static binary
        run: |
          # Create output directory
          mkdir -p dist
          
          # Build the custom Docker image
          docker build -t frankenphp-static-builder -f Dockerfile.static .
          
          # Create a container from the image
          CONTAINER_ID=$(docker create frankenphp-static-builder)
          
          # Copy the binary from the container
          docker cp $CONTAINER_ID:/go/src/app/dist/frankenphp-linux-$(uname -m) dist/frankenphp
          
          # Remove the container
          docker rm $CONTAINER_ID
          
          # Make the binary executable
          chmod +x dist/frankenphp
          
          # Display version info
          if [ -f "dist/frankenphp" ]; then
            dist/frankenphp version || echo "Binary built, but couldn't display version info"
          else
            echo "Failed to build FrankenPHP binary"
            exit 1
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frankenphp-${{ steps.get_release.outputs.tag_name }}
          path: dist/frankenphp
          retention-days: 7
